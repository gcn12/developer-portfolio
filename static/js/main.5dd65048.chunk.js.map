{"version":3,"sources":["about/8biticon.jpg","404/16.png","about/About.styles.js","about/About.js","email/apikeys.js","email/Email.styles.js","email/Email.js","contact/Contact.styles.js","contact/Contact.js","work/Work.js","404/Error.styles.js","404/Error.js","header/Header.styles.js","header/Header.js","App.js","serviceWorker.js","Index.styles.js","index.js"],"names":["module","exports","AboutContainer","styled","div","Avatar","img","Text","p","About","this","props","updateIsAboutPage","updateIsContactPage","src","avatar","Component","Form","form","EmailContainer","EmailInput","input","EmailTextarea","textarea","EmailButton","button","ErrorMessage","Email","state","email","name","message","allFields","sendEmail","e","preventDefault","length","emailjs","sendForm","apiKeys","target","then","result","console","log","text","error","document","getElementById","value","setState","updateEmail","updateName","updateMessage","className","onSubmit","onChange","id","type","ContactContainer","Contact","Work","Image","ErrorContainer","Error","alt","errorImage","LogoTitle","LogoSubtitle","Options","OptionsContainer","Header","to","style","textDecoration","isAboutPage","isContactPage","App","exact","path","render","component","Boolean","window","location","hostname","match","IndexContainer","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5dd65048.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/8biticon.b601a87a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.f6d9eb4d.png\";","import styled from 'styled-components'\n\nexport const AboutContainer = styled.div`\n    display: flex;\n    // padding-left: 200px;\n    padding-top: 70px;\n    // align-items: center;\n    justify-content: center;\n`\n\nexport const Avatar = styled.img`\n\n`\nexport const Text = styled.p`\n    font-size: 25px;\n`","import React, { Component } from 'react'\nimport avatar from './8biticon.jpg'\nimport { Avatar, AboutContainer, Text } from './About.styles'\n\nclass About extends Component {\n\n    componentDidMount() {\n        this.props.updateIsAboutPage(true)\n        this.props.updateIsContactPage(false)\n    }\n\n    render() {\n        return(\n            <AboutContainer>\n                <Avatar src={avatar} />\n                <Text>\n                Gareth Ng is a front-end developer who specializes in React.js. \n                </Text>\n            </AboutContainer>\n        )\n    }\n}\n\nexport default About","export default {\n    USER_ID: 'user_PaxsPBydmZqHY0b5SQp7W',\n    TEMPLATE_ID: 'template_dc51aro'\n}","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nexport const EmailContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nexport const EmailInput = styled.input`\n    width: 55vw;\n    min-width: 200px;\n    height: 50px;\n    color: rgb(80, 80, 80);\n    font-size: 20px;\n    border: none;\n    border-radius: 5px;\n`\n\nexport const EmailTextarea = styled.textarea`\n    color: rgb(80, 80, 80);\n    width: 55vw;\n    min-width: 200px;\n    height: 140px;\n    border: none;\n    border-radius: 5px;\n    font-size: 20px;\n`\n\nexport const EmailButton = styled.button`\n    max-width: 150px;\n    height: 50px;\n    font-size: 20px;\n    color: white;\n    border: none;\n    background-color: rgb(10,10,10);\n    &:hover{\n        background-color: rgb(50,50,50);\n    }\n`\n\nexport const ErrorMessage = styled.div`\n    font-size: 20px;\n    color: red;\n    font-weight: 900;\n`","import React, { Component } from 'react'\nimport emailjs from 'emailjs-com'\nimport apiKeys from './apikeys'\nimport {\n    EmailContainer,\n    EmailInput,\n    EmailTextarea,\n    EmailButton,\n    Form,\n    ErrorMessage,\n} from './Email.styles'\n\n\nclass Email extends Component {\n    state = {\n        email: '',\n        name: '',\n        message: '',\n        allFields: true,\n    }\n\n    sendEmail = (e) => {\n        e.preventDefault();\n        if(this.state.email.length>0 && this.state.name.length>0 && this.state.message.length>0){\n            emailjs.sendForm('service_xfb4n3g', apiKeys.TEMPLATE_ID, e.target, apiKeys.USER_ID)\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n            document.getElementById('form-name').value=''\n            document.getElementById('form-email').value=''\n            document.getElementById('form-message').value=''\n            this.setState({\n                allFields: true\n            })\n        }else{\n            this.setState({\n                allFields: false\n            })\n        }\n    }\n\n    updateEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    updateMessage = (e) => {\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n    render() {\n        return(\n        <Form className=\"contact-form\" onSubmit={this.sendEmail}>\n            <EmailContainer>\n                <br></br>\n                <label>Name</label>\n                <EmailInput onChange={this.updateName} value={this.state.name} id='form-name' type=\"text\" name=\"from_name\" />\n                <br></br>\n                <label>Email</label>\n                <EmailInput onChange={this.updateEmail} value={this.state.email} id='form-email' type=\"email\" name=\"reply_to\" />\n                <br></br>\n                <label>Message</label>\n                <EmailTextarea onChange={this.updateMessage} value={this.state.message} id='form-message' name=\"message\" />\n                <br></br>\n                {this.state.allFields ? \n                null\n                :\n                <ErrorMessage>All fields must be filled</ErrorMessage>\n                }\n            <EmailButton type=\"submit\" >SEND</EmailButton>\n            </EmailContainer>\n        </Form>\n        )\n    }\n}\n\nexport default Email","import styled from 'styled-components'\n\nexport const ContactContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React, { Component } from 'react'\nimport Email from '../email/Email'\nimport { ContactContainer } from './Contact.styles'\n\nclass Contact extends Component {\n    componentDidMount() {\n        this.props.updateIsContactPage(true)\n        this.props.updateIsAboutPage(false)\n    }\n\n    render(){\n        return(\n            <div>\n                <ContactContainer>e: garethcng@gmail.com</ContactContainer>\n                <Email />\n            </div>\n        )\n    }\n}\n\nexport default Contact","import React, { Component } from 'react'\n\nclass Work extends Component {\n    componentDidMount() {\n        this.props.updateIsContactPage(false)\n        this.props.updateIsAboutPage(false)\n    }\n\n    render() {\n        return(\n            <div className='content'>Work</div>\n        )\n    }\n}\n\nexport default Work","import styled from 'styled-components'\n\nexport const Image = styled.img`\n    height: 75vh;\n`\n\nexport const ErrorContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import React from 'react'\nimport errorImage from './16.png'\nimport { Image, ErrorContainer } from './Error.styles'\n\nconst Error = () => {\n    return(\n        <ErrorContainer>\n            <Image alt=\"404\" src={errorImage}></Image>\n        </ErrorContainer>\n    )\n}\n\nexport default Error","import styled from 'styled-components'\n\nexport const LogoTitle = styled.div`\n    font-size: 50px;\n    color: rgb(30,30,30);\n    text-decoration: none;\n    &:hover {\n        color: rgb(120,120,120)\n    }\n`\n\nexport const LogoSubtitle= styled.div`\n    @media (max-width: 700px){\n        display: none;\n    }\n    font-size: 20px;\n`\n\nexport const Options = styled.div`\n    font-size: 20px;\n    color: rgb(30,30,30);\n`\n\nexport const OptionsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const UnderlineStatic = styled.div`\n    display: inline-block;\n    padding: 10px 3px 0px 3px;\n    position: relative;\n\n    &:after {\n        background: none repeat scroll 0 0 transparent;\n        bottom: 0;\n        content: \"\";\n        display: block;\n        height: 1px;\n        left: 50%;\n        position: absolute;\n        background: rgb(30,30,30);\n        transition: width 0.3s ease 0s, left 0.3s ease 0s;\n        width: 0;\n        width: 100%; \n        left: 0; \n    }\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Underline.css'\nimport { \n    LogoSubtitle,\n    LogoTitle, \n    Options,\n    OptionsContainer,\n} from './Header.styles'\n \nconst Header = (props) => {\n    return (\n        <ul id='header-container'>\n            <div className='flex'> \n                <li>\n                    <Link to='/developer-portfolio/' style={{textDecoration: 'none'}}>\n                        <LogoTitle>GARETH NG</LogoTitle>\n                    </Link>\n                </li>\n                <OptionsContainer id='options-container'>\n                    <li>\n                    <Link to='/developer-portfolio/about'>\n                        <Options className={`underline ${props.isAboutPage ? 'underline2' : null}`}>ABOUT</Options>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/developer-portfolio/contact'><Options className={`underline ${props.isContactPage ? 'underline2' : null}`}>CONTACT</Options></Link>\n                    </li>\n                </OptionsContainer>\n            </div>\n            <LogoSubtitle>WEB DEVELOPER</LogoSubtitle>\n        </ul>\n    )\n}\n\nexport default Header","import React, { Component } from 'react';\nimport About from './about/About'\nimport Contact from './contact/Contact'\nimport Work from './work/Work'\nimport Error from './404/Error'\nimport Header from './header/Header'\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n\n  state = {\n    isContactPage: false,\n    isAboutPage: false,\n  }\n\n  updateIsContactPage = (input) => {\n    this.setState({\n      isContactPage: input\n    })\n  }\n\n  updateIsAboutPage = (input) => {\n    this.setState({\n      isAboutPage: input\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header isContactPage={this.state.isContactPage} isAboutPage={this.state.isAboutPage}/>\n        <Switch>\n          <Route exact path='/developer-portfolio' render={()=> (<Work updateIsAboutPage={this.updateIsAboutPage} updateIsContactPage={this.updateIsContactPage}/>)} />\n          <Route exact path='/developer-portfolio/about' render={()=> ( <About updateIsAboutPage={this.updateIsAboutPage} updateIsContactPage={this.updateIsContactPage}/>)}/>\n          <Route exact path='/developer-portfolio/contact' render={()=> (<Contact updateIsContactPage={this.updateIsContactPage} updateIsAboutPage={this.updateIsAboutPage}/>)} />\n          <Route path='/' component={Error}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components'\n\nexport const IndexContainer = styled.div`\n    margin: 2% 12% 2% 12%\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { IndexContainer } from './Index.styles.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <IndexContainer>\n      \n      <App/>\n      {/* <Footer/> */}\n    </IndexContainer>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}