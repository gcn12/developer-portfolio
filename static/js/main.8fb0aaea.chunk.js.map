{"version":3,"sources":["about/8biticon.jpg","404/16.png","footer/instagram.png","footer/github.png","about/About.styles.js","about/About.js","contact/Contact.js","work/Work.js","404/Error.styles.js","404/Error.js","App.js","serviceWorker.js","Index.styles.js","header/Header.styles.js","header/Header.js","footer/Footer.styles.js","footer/Footer.js","index.js"],"names":["module","exports","AboutContainer","styled","div","Avatar","img","Text","p","About","src","avatar","Contact","Work","Image","ErrorContainer","Error","alt","errorImage","App","exact","path","component","Boolean","window","location","hostname","match","IndexContainer","HeaderContainer","LogoContainer","LogoTitle","LogoSubtitle","Header","to","style","textDecoration","FooterContainer","Instagram","Github","Footer","href","instagram","github","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,2cCEpC,IAAMC,EAAiBC,IAAOC,IAAV,KAMdC,EAASF,IAAOG,IAAV,KAGNC,EAAOJ,IAAOK,EAAV,KCIFC,EAXD,WACV,OACI,kBAACP,EAAD,KACI,kBAACG,EAAD,CAAQK,IAAKC,MACb,kBAACJ,EAAD,wECAGK,EANC,WACZ,OACI,yCCIOC,EANF,WACT,OACI,sC,8PCFD,IAAMC,EAAQX,IAAOG,IAAV,KAILS,EAAiBZ,IAAOC,IAAV,KCMZY,EARD,WACV,OACI,kBAACD,EAAD,KACI,kBAACD,EAAD,CAAOG,IAAI,MAAMP,IAAKQ,Q,OCanBC,EAbH,WACV,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAWT,IACpD,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,6BAA6BC,UAAWb,IAC1D,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,+BAA+BC,UAAWV,IAC5D,kBAAC,IAAD,CAAOS,KAAK,IAAIC,UAAWN,OCFfO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6GChBC,IAAMC,EAAiBzB,IAAOC,IAAV,K,qnBCApB,IAAMyB,EAAkB1B,IAAOC,IAAV,KAOf0B,EAAgB3B,IAAOC,IAAV,KAIb2B,EAAY5B,IAAOC,IAAV,KAIT4B,EAAc7B,IAAOC,IAAT,KAIZK,EAAQN,IAAOC,IAAV,KAILQ,EAAUT,IAAOC,IAAV,KCGL6B,EAjBA,WACX,OACI,kBAACJ,EAAD,KACI,kBAACC,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAMG,GAAG,wBAAwBC,MAAO,CAACC,eAAgB,SAAzD,cAEJ,kBAACJ,EAAD,uBAEJ,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAME,GAAG,6BAA6BC,MAAO,CAACC,eAAgB,SAA9D,UAEJ,kBAAC,EAAD,KAAS,kBAAC,IAAD,CAAMF,GAAG,+BAA+BC,MAAO,CAACC,eAAgB,SAAhE,c,sfCrBd,IAAMC,EAAkBlC,IAAOC,IAAV,KAWfkC,EAAYnC,IAAOG,IAAV,KAITiC,GAASpC,IAAOG,IAAV,KCEJkC,GAbA,WACX,OACI,kBAACH,EAAD,KACI,uBAAGI,KAAK,uCACJ,kBAACH,EAAD,CAAW5B,IAAKgC,IAAWzB,IAAI,oBAEnC,uBAAGwB,KAAK,gCACJ,kBAACF,GAAD,CAAQ7B,IAAKiC,IAAQ1B,IAAI,mBCHzC2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAClB,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,SAIJmB,SAASC,eAAe,SN+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8fb0aaea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/8biticon.b601a87a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.f6d9eb4d.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.0e84d592.png\";","module.exports = __webpack_public_path__ + \"static/media/github.cefc2023.png\";","import styled from 'styled-components'\n\nexport const AboutContainer = styled.div`\n    display: flex;\n    padding-left: 200px;\n    padding-top: 70px;\n`\n\nexport const Avatar = styled.img`\n\n`\nexport const Text = styled.p`\n\n`","import React from 'react'\nimport avatar from './8biticon.jpg'\nimport { Avatar, AboutContainer, Text } from './About.styles'\n\nconst About = () => {\n    return(\n        <AboutContainer>\n            <Avatar src={avatar} />\n            <Text>\n            Gareth Ng is a front-end developer with emphasis in React.js. \n            </Text>\n        </AboutContainer>\n    )\n}\n\nexport default About","import React from 'react'\n\nconst Contact = () => {\n    return(\n        <div>Contact</div>\n    )\n}\n\nexport default Contact","import React from 'react'\n\nconst Work = () => {\n    return(\n        <div>Work</div>\n    )\n}\n\nexport default Work","import styled from 'styled-components'\n\nexport const Image = styled.img`\n    height: 75vh;\n`\n\nexport const ErrorContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import React from 'react'\nimport errorImage from './16.png'\nimport { Image, ErrorContainer } from './Error.styles'\n\nconst Error = () => {\n    return(\n        <ErrorContainer>\n            <Image alt=\"404\" src={errorImage}></Image>\n        </ErrorContainer>\n    )\n}\n\nexport default Error","import React from 'react';\nimport About from './about/About'\nimport Contact from './contact/Contact'\nimport Work from './work/Work'\nimport Error from './404/Error'\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/developer-portfolio' component={Work}/>\n        <Route exact path='/developer-portfolio/about' component={About}/>\n        <Route exact path='/developer-portfolio/contact' component={Contact}/>\n        <Route path='/' component={Error}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components'\n\nexport const IndexContainer = styled.div`\n    margin: 2% 12% 2% 12%\n`","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    // margin: 2% 10% 0% 10%;\n    text-decoration: none;\n`\n\nexport const LogoContainer = styled.div`\n\n`\n\nexport const LogoTitle = styled.div`\n    font-size: 50px;\n`\n\nexport const LogoSubtitle= styled.div`\n    font-size: 20px\n`\n\nexport const About = styled.div`\n    font-size: 20px\n`\n\nexport const Contact = styled.div`\n    font-size: 20px\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { \n    HeaderContainer,\n    About,\n    LogoContainer,\n    LogoSubtitle,\n    LogoTitle, \n    Contact,\n} from './Header.styles'\n\nconst Header = () => {\n    return (\n        <HeaderContainer>\n            <LogoContainer>\n                <LogoTitle>\n                    <Link to='/developer-portfolio/' style={{textDecoration: 'none'}}>GARETH NG</Link>\n                </LogoTitle>\n                <LogoSubtitle>WEB DEVELOPER</LogoSubtitle>\n            </LogoContainer>\n            <About>\n                <Link to='/developer-portfolio/about' style={{textDecoration: 'none'}}>ABOUT</Link>\n            </About>\n            <Contact><Link to='/developer-portfolio/contact' style={{textDecoration: 'none'}}>CONTACT</Link></Contact>\n        </HeaderContainer>\n    )\n}\n\nexport default Header","import styled from 'styled-components'\n\nexport const FooterContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    position: absolute;\n    bottom: 0;\n    // width: 100%;\n    // padding-right: 40px;\n    padding-bottom: 50px\n//   height: 2.5rem; \n`\n\nexport const Instagram = styled.img`\n    height: 35px;\n`\n\nexport const Github = styled.img`\n    height: 35px;\n    padding-left: 10px;\n`","import React from 'react'\nimport instagram from './instagram.png'\nimport github from './github.png'\nimport { Instagram, Github, FooterContainer} from './Footer.styles'\n\n\nconst Footer = () => {\n    return(\n        <FooterContainer>\n            <a href=\"https://www.instagram.com/gareth.ng\">\n                <Instagram src={instagram} alt='instagram logo' />\n            </a>\n            <a href=\"https://www.github.com/gcn12\">\n                <Github src={github} alt='github logo'/>\n            </a>\n        </FooterContainer>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { IndexContainer } from './Index.styles.js'\nimport Header from './header/Header'\nimport Footer from './footer/Footer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <IndexContainer>\n      <Header />\n      <App />\n      <Footer />\n    </IndexContainer>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}