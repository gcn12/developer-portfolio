{"version":3,"sources":["about/8biticon.jpg","404/16.png","about/About.styles.js","about/About.js","email/apikeys.js","email/Email.styles.js","email/Email.js","contact/Contact.styles.js","contact/Contact.js","work/Work.js","404/Error.styles.js","404/Error.js","App.js","serviceWorker.js","Index.styles.js","header/Header.styles.js","header/Header.js","index.js"],"names":["module","exports","AboutContainer","styled","div","Avatar","img","Text","p","About","src","avatar","Form","form","EmailContainer","EmailInput","input","EmailTextarea","textarea","EmailButton","button","ErrorMessage","Email","state","email","name","message","allFields","sendEmail","e","preventDefault","length","emailjs","sendForm","apiKeys","target","then","result","console","log","text","error","document","getElementById","value","setState","updateEmail","updateName","updateMessage","className","onSubmit","this","onChange","id","type","Component","ContactContainer","Contact","Work","Image","ErrorContainer","Error","alt","errorImage","App","exact","path","component","Boolean","window","location","hostname","match","IndexContainer","HeaderContainer","LogoContainer","LogoTitle","LogoSubtitle","OptionsContainer","Options","Header","to","style","textDecoration","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4daf631d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/8biticon.b601a87a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.f6d9eb4d.png\";","import styled from 'styled-components'\n\nexport const AboutContainer = styled.div`\n    display: flex;\n    // padding-left: 200px;\n    padding-top: 70px;\n    // align-items: center;\n    justify-content: center;\n`\n\nexport const Avatar = styled.img`\n\n`\nexport const Text = styled.p`\n\n`","import React from 'react'\nimport avatar from './8biticon.jpg'\nimport { Avatar, AboutContainer, Text } from './About.styles'\n\nconst About = () => {\n    return(\n        <AboutContainer>\n            <Avatar src={avatar} />\n            <Text>\n            Gareth Ng is a front-end developer who specializes in React.js. \n            </Text>\n        </AboutContainer>\n    )\n}\n\nexport default About","export default {\n    USER_ID: 'user_PaxsPBydmZqHY0b5SQp7W',\n    TEMPLATE_ID: 'template_dc51aro'\n}","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nexport const EmailContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nexport const EmailInput = styled.input`\n    width: 55vw;\n    min-width: 200px;\n    height: 50px;\n    color: rgb(80, 80, 80);\n    font-size: 20px;\n    border: none;\n    border-radius: 5px;\n`\n\nexport const EmailTextarea = styled.textarea`\n    color: rgb(80, 80, 80);\n    min-width: 200px;\n    width: 55vw;\n    height: 140px;\n    border: none;\n    border-radius: 5px;\n    font-size: 20px;\n`\n\nexport const EmailButton = styled.button`\n    max-width: 150px;\n    height: 50px;\n    font-size: 20px;\n    color: white;\n    border: none;\n    background-color: rgb(10,10,10);\n    &:hover{\n        background-color: rgb(50,50,50);\n    }\n`\n\nexport const ErrorMessage = styled.div`\n    font-size: 20px;\n    color: red;\n`","import React, { Component } from 'react'\nimport emailjs from 'emailjs-com'\nimport apiKeys from './apikeys'\nimport {\n    EmailContainer,\n    EmailInput,\n    EmailTextarea,\n    EmailButton,\n    Form,\n    ErrorMessage,\n} from './Email.styles'\n\n\nclass Email extends Component {\n    state = {\n        email: '',\n        name: '',\n        message: '',\n        allFields: true,\n    }\n\n    sendEmail = (e) => {\n        e.preventDefault();\n        if(this.state.email.length>0 && this.state.name.length>0 && this.state.message.length>0){\n            emailjs.sendForm('service_xfb4n3g', apiKeys.TEMPLATE_ID, e.target, apiKeys.USER_ID)\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n            document.getElementById('form-name').value=''\n            document.getElementById('form-email').value=''\n            document.getElementById('form-message').value=''\n            this.setState({\n                allFields: true\n            })\n        }else{\n            this.setState({\n                allFields: false\n            })\n        }\n    }\n\n    updateEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    updateMessage = (e) => {\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n    render() {\n        return(\n        <Form className=\"contact-form\" onSubmit={this.sendEmail}>\n            <EmailContainer>\n                <label>Name</label>\n                <EmailInput onChange={this.updateName} value={this.state.name} id='form-name' type=\"text\" name=\"from_name\" />\n                <label>Email</label>\n                <EmailInput onChange={this.updateEmail} value={this.state.email} id='form-email' type=\"email\" name=\"reply_to\" />\n                <label>Message</label>\n                <EmailTextarea onChange={this.updateMessage} value={this.state.message} id='form-message' name=\"message\" />\n                <br></br>\n                {this.state.allFields ? \n                null\n                :\n                <ErrorMessage>All fields must be filled</ErrorMessage>\n                }\n            <EmailButton type=\"submit\" >SEND</EmailButton>\n            </EmailContainer>\n        </Form>\n        )\n    }\n}\n\nexport default Email","import styled from 'styled-components'\n\nexport const ContactContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React from 'react'\nimport Email from '../email/Email'\nimport { ContactContainer } from './Contact.styles'\n\nconst Contact = () => {\n    return(\n        <div>\n            <ContactContainer>e: garethcng@gmail.com</ContactContainer>\n            <Email />\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react'\n\nconst Work = () => {\n    return(\n        <div className='content'>Work</div>\n    )\n}\n\nexport default Work","import styled from 'styled-components'\n\nexport const Image = styled.img`\n    height: 75vh;\n`\n\nexport const ErrorContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import React from 'react'\nimport errorImage from './16.png'\nimport { Image, ErrorContainer } from './Error.styles'\n\nconst Error = () => {\n    return(\n        <ErrorContainer>\n            <Image alt=\"404\" src={errorImage}></Image>\n        </ErrorContainer>\n    )\n}\n\nexport default Error","import React from 'react';\nimport About from './about/About'\nimport Contact from './contact/Contact'\nimport Work from './work/Work'\nimport Error from './404/Error'\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/developer-portfolio' component={Work}/>\n        <Route exact path='/developer-portfolio/about' component={About}/>\n        <Route exact path='/developer-portfolio/contact' component={Contact}/>\n        <Route path='/' component={Error}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from 'styled-components'\n\nexport const IndexContainer = styled.div`\n    margin: 2% 12% 2% 12%\n`","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    text-decoration: none;\n`\n    \nexport const LogoContainer = styled.div`\n\n\n`\n\nexport const LogoTitle = styled.div`\n    font-size: 50px;\n    color: rgb(30,30,30);\n    text-decoration: none;\n    &:hover {\n        color: rgb(120,120,120)\n    }\n`\n\nexport const LogoSubtitle= styled.div`\n    font-size: 20px;\n`\n\nexport const OptionsContainer = styled.div`\n    display: flex;\n`\n\nexport const Options = styled.div`\n    font-size: 20px;\n    margin: 0px 8px;\n    color: rgb(30,30,30);\n`\n\nexport const Underline = styled.div`\n    // &:after {\n    //     background: none repeat scroll 0 0 transparent;\n    //     bottom: 0;\n    //     content: \"\";\n    //     display: block;\n    //     height: 1px;\n    //     // left: 50%;\n    //     // position: absolute;\n    //     background: rgb(30,30,30);\n    //     transition: width 0.3s ease 0s, left 0.3s ease 0s;\n    //     width: 0;\n    //     width: 100%; \n    //     left: 0; \n    // }\n\n\n\n    display: inline-block;\n    padding: 10px 2px;\n    position: relative;\n\n    &:after {\n        background: none repeat scroll 0 0 transparent;\n        // bottom: 0;\n        content: \"\";\n        display: block;\n        height: 1px;\n        left: 50%;\n        position: absolute;\n        background: rgb(30,30,30);\n        transition: width 0.3s ease 0s, left 0.3s ease 0s;\n        width: 0;\n    }\n\n    &:hover:after {\n        width: 100%; \n        left: 0; \n    }\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Underline.css'\nimport { \n    HeaderContainer,\n    // About,\n    LogoContainer,\n    LogoSubtitle,\n    LogoTitle, \n    // Contact,\n    OptionsContainer,\n    Options,\n    // Underline,\n} from './Header.styles'\n \nconst Header = () => {\n    return (\n        <HeaderContainer>\n            <LogoContainer>\n                    <Link to='/developer-portfolio/' style={{textDecoration: 'none'}}>\n                        <LogoTitle>GARETH NG</LogoTitle>\n                    </Link>\n                <LogoSubtitle>WEB DEVELOPER</LogoSubtitle>\n            </LogoContainer>\n            <OptionsContainer>\n                {/* <Underline> */}\n                    <Link to='/developer-portfolio/about'><Options className='test'>ABOUT</Options></Link>\n                {/* </Underline> */}\n                {/* <Underline> */}\n                    <Link to='/developer-portfolio/contact'><Options className='test'>CONTACT</Options></Link>\n                {/* </Underline> */}\n            </OptionsContainer>\n        </HeaderContainer>\n    )\n}\n\nexport default Header","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { IndexContainer } from './Index.styles.js'\nimport Header from './header/Header'\n// import Footer from './footer/Footer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <IndexContainer>\n      <Header />\n      <App/>\n      {/* <Footer/> */}\n    </IndexContainer>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}